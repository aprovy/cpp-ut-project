
INCLUDE(FindPythonInterp)

IF(PYTHONINTERP_FOUND)
  SET(PYTHON ${PYTHON_EXECUTABLE})
ELSE(PYTHONINTERP_FOUND)
  MESSAGE(FATAL_ERROR "No Python interpreter found")
ENDIF(PYTHONINTERP_FOUND)

ADD_DEFINITIONS(
    -DPACKAGE_NAME=${PACKAGE_NAME}
    -DPACKAGE_STRING=${PACKAGE_STRING}
    -DPACKAGE_BUGREPORT=${PACKAGE_BUGREPORT}
    -DPACKAGE_URL=${PACKAGE_URL}
    -DPACKAGE=${PACKAGE}
    -DVERSION=${VERSION}
)

IF(MSVC)
ADD_DEFINITIONS(-DMSVC_VMG_ENABLED /vmg)
ENDIF(MSVC)

SET(UT_CASES
  UT_HelloWorld.h
  IT_HelloWorld.h
)


LINK_DIRECTORIES(
  ${PROJECT_SOURCE_DIR}/../project/src/Debug
  ${PROJECT_SOURCE_DIR}/../tools/mockcpp/lib
  ${PROJECT_SOURCE_DIR}/../tools/testngpp/lib
  )

INCLUDE_DIRECTORIES(BEFORE 
  ${PROJECT_SOURCE_DIR}/include
  ${PROJECT_SOURCE_DIR}/../tools/3rdparty
  ${PROJECT_SOURCE_DIR}/../tools/mockcpp/include
  ${PROJECT_SOURCE_DIR}/../tools/testngpp/include
  )

SET(TEST_GENERATOR ${PROJECT_SOURCE_DIR}/../tools/testngpp/testngpp/generator/testngppgen.pyc)
SET(TESTCASE_PREFIX testngpp)

FOREACH(CASE ${UT_CASES})
  GET_FILENAME_COMPONENT(CASE_NAME ${CASE} NAME_WE)
  SET(CASE_SRC ${CMAKE_CURRENT_BINARY_DIR}/${CASE_NAME}.cpp)

  ADD_CUSTOM_TARGET(${CASE_NAME} DEPENDS ${CASE_SRC})

  SET(CASE_MODULE ${TESTCASE_PREFIX}-${CASE_NAME})

  ADD_LIBRARY(${CASE_MODULE} MODULE ${CASE_SRC})

  TARGET_LINK_LIBRARIES(${CASE_MODULE}
    ${MODULE_NAME}
    testngpp
    mockcpp
	)

  ADD_CUSTOM_COMMAND(
    OUTPUT ${CASE_SRC}
    COMMAND ${PYTHON} ${TEST_GENERATOR} -e gb2312 -o ${CASE_SRC} ${CMAKE_CURRENT_SOURCE_DIR}/${CASE}
    DEPENDS ${CMAKE_CURRENT_SOURCE_DIR}/${CASE}
    )

  ADD_DEPENDENCIES(${CASE_MODULE} ${CASE_NAME})
ENDFOREACH()

IF(UNIX)
ADD_DEFINITIONS(-g -ggdb)
ENDIF(UNIX)
